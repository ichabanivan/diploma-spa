{"version":3,"sources":["services/controller/reducer.js","constants/index.js","services/controller/saga.js","services/controller/prepare.js","services/controller/use-actions.js","services/controller/use-reducer.js","services/controller/use-subscribe.js","services/controller/index.js","store.js","controller.js","services/route/param.js","services/route/route.js","services/route/index.js","constants/routes.js","services/api.service.js","layout/data-api/controller.js","images/placeholder.png","components/card-news.js","components/alert-error.js","components/preloader.js","layout/data-api/index.js","layout/data-local/controller.js","layout/data-local/index.js","layout/images-original/controller.js","layout/images-original/index.js","layout/images-compressed/controller.js","layout/images-compressed/index.js","layout/images-resized/controller.js","layout/images-resized/index.js","layout/list/index.js","layout/index.js","reportWebVitals.js","index.js"],"names":["prefix","config","DEBUG","TYPE","ADD","CLEAR","UPDATE","REMOVE","META","updateCSDMetaAction","name","payload","type","clearCSD","clearCSDAction","updateCSD","updateCSDAction","selector","state","_","get","selectCSD","subscribeSaga","unsubscribeSaga","sagas","SUBSCRIBE","UNSUBSCRIBE","controller","channel","console","error","fork","subscriber","put","connected","cancel","takeEvery","options","ctrlName","uniqueId","Error","createTypes","isArray","types","map","toUpperCase","initial","isObject","action","clearCtrl","updateCtrl","camelCase","dispatch","useDispatch","actionCreators","useMemo","cache","Object","keys","actionName","actual","useSelector","useReducerSubscribe","remove","useCallback","removeCSDAction","create","createCSDAction","useEffect","meta","subscribe","subscribeAction","unsubscribe","unsubscribeAction","useController","useReducer","useActions","useSubscribe","history","createHistory","routerMiddleware","createRouterMiddleware","sagaMiddleware","createSagaMiddleware","enchantedCompose","production","compose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","combineReducers","current","currentMeta","currentInitial","toastr","router","connectRouter","applyMiddleware","run","initializeSaga","prepareController","initialized","disabled","errorMessage","INITIALIZE","Param","applyValidOptions","isString","short","defaults","isUndefined","isValid","isFunction","archive","extract","v","Boolean","to","data","value","def","isEqual","from","this","Route","url","LINK","params","query","assign","formatPath","secret","formatQuery","PARAMS","pathname","parsePath","getPathname","QUERY","search","parseQuery","getSearch","ACTION_PUSH","push","ACTION_REPLACE","replace","PUSH","REPLACE","ROUTE","defineROUTE","REGEXP","defineREGEXP","isActive","defineIsActive","queryAnnotation","defineQueryAnnotation","paramsAnnotation","defineParamsAnnotation","defineParseQuery","defineFormatQuery","defineParsePath","defineFormatPath","regParam","Symbol","String","custom","isRegExp","RegExp","regexp","test","annotation","rp","match","propName","encodeURIComponent","path","result","matcher","a","param","qp","qs","stringify","addQueryPrefix","queryString","parse","ignoreQueryPrefix","split","string","part","exist","find","defineRoute","NEWS","NEWS_LIST","NEWS_DATA_LOCAL","NEWS_DATA_API","NEWS_IMAGES_ORIGINAL","NEWS_IMAGES_COMPRESSED","NEWS_IMAGES_RESIZED","instanceJSON","axios","paramsSerializer","baseURL","withCredentials","headers","interceptors","response","use","prepareResponse","instanceNEWS","arrayFormat","encode","list","aside","call","main","articles","CardNews","title","urlToImage","description","publishedAt","author","Card","className","src","alt","width","height","CardBody","CardTitle","tag","CardSubtitle","CardText","CardFooter","moment","format","defaultProps","Date","placeholderIMG","memo","AlertError","message","active","onClear","attr","Alert","color","isOpen","toggle","withLoader","fn","children","propTypes","PropTypes","bool","oneOfType","arrayOf","node","element","Preloader","props","id","BoxLoader","style","Spinner","isShit","document","documentMode","navigator","userAgent","xmlns","preserveAspectRatio","viewBox","aria-hidden","focusable","role","seeds","item","i","transform","begin","Seed","x","y","rx","ry","fill","attributeName","values","keyTimes","dur","repeatCount","initialize","isControllerConnected","clearError","Container","Row","Col","xs","lg","md","index","ListGroup","ListGroupItem","horizontal","Link","ROUTES","component","List","DataApi","DataLocal","ImagesResized","ImagesOriginal","ImagesCompressed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","location","progressBar","timeOut","preventDuplicates","newestOnTop","position","transitionIn","transitionOut","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7524bb3f.chunk.js","sourcesContent":["\n// outsource dependencies\nimport _ from 'lodash';\n\n// NOTE CSD - controller stored data\nconst CSD_REDUCER_PATH = 'controller';\n\nconst TYPE = (prefix => ({\n  ADD: `${prefix}ADD`,\n  CLEAR: `${prefix}CLEAR`,\n  UPDATE: `${prefix}UPDATE`,\n  REMOVE: `${prefix}REMOVE`,\n  // NOTE addition layer for inner information\n  META: `${prefix}META`,\n}))('@CSD-store/');\n\n/* ACTIONS */\nexport const clearCSDAction = name => ({ type: TYPE.CLEAR, name });\nexport const removeCSDAction = name => ({ type: TYPE.REMOVE, name });\nexport const createCSDAction = (name, initial) => ({ type: TYPE.ADD, name, initial });\nexport const updateCSDAction = (name, payload) => ({ type: TYPE.UPDATE, name, payload });\nexport const updateCSDMetaAction = (name, payload) => ({ type: TYPE.META, name, payload });\nexport const clearCSD = name => () => clearCSDAction(name);\nexport const updateCSD = name => payload => updateCSDAction(name, payload);\n\n/* SELECTOR */\nconst selector = state => _.get(state, CSD_REDUCER_PATH);\nexport const selectCSD = name => state => _.get(selector(state), name) || {};\nexport const selectMetaCSD = name => state => _.get(selector(state), `META.${name}`) || {};\n\n/* REDUCER */\nexport const reducer = (state = {}, action) => {\n  // NOTE \"name\" it's required unique identifier for dynamic reducers\n  const { type, name, payload = {}, initial = {} } = action;\n  const current = _.get(state, name) || {};\n  const currentMeta = _.get(state, `META.${name}`) || {};\n  const currentInitial = _.get(state, `META.${name}.initial`) || {};\n\n  switch (type) {\n    default: return state;\n    case TYPE.REMOVE:\n      // NOTE remove dynamic reducer\n      return { ...state, [name]: null, META: { ...state.META, [name]: { ...currentMeta, initial: null } } };\n    case TYPE.CLEAR:\n      // NOTE bring dynamic reducer state to initial values\n      return { ...state, [name]: { ...currentInitial } };\n    case TYPE.ADD:\n      // NOTE initialize new dynamic reducer\n      return { ...state, [name]: { ...initial }, META: { ...state.META, [name]: { ...currentMeta, initial } } };\n    case TYPE.UPDATE:\n      // NOTE most used action for dynamic reducers\n      return { ...state, [name]: { ...current, ...payload } };\n    case TYPE.META:\n      // NOTE internal controller information\n      return { ...state, META: { ...state.META, [name]: { ...currentMeta, ...payload } } };\n  }\n};\n","\nconst config = {\n  DEBUG: true\n};\n\nexport default config;\n","\n// outsource dependencies\nimport { fork, takeEvery, cancel, put } from 'redux-saga/effects';\n// local dependencies\nimport { updateCSDMetaAction } from './reducer';\n// NOTE specific saga actions to subscribe and unsubscribe controllers by annotation\nconst TYPE = (prefix => ({\n  SUBSCRIBE: `${prefix}SUBSCRIBE`,\n  UNSUBSCRIBE: `${prefix}UNSUBSCRIBE`,\n}))('@CSD-action/');\n\nexport const subscribeAction = controller => ({ controller, type: TYPE.SUBSCRIBE });\nfunction * subscribeSaga ({ type, controller }) {\n  // console.log(`%c ${type}: ${controller.name} `, 'color: #FF6766; font-weight: bolder; font-size: 12px;'\n  //   , '\\n controller:', controller\n  // );\n  if (controller.channel) {\n    console.error(`%c DUPLICATION ${controller.name} `, 'color: #FF6766; font-weight: bolder; font-size: 18px;'\n      , '\\n Please make sure you use only one instance of Controller within DOM in same time'\n      , '\\n CACHE:', controller\n    );\n  }\n  controller.channel = yield fork(controller.subscriber);\n  // NOTE store mark in to redux to provide correct watching of changes\n  yield put(updateCSDMetaAction(controller.name, { connected: true }));\n}\n\nexport const unsubscribeAction = controller => ({ controller, type: TYPE.UNSUBSCRIBE });\nfunction * unsubscribeSaga ({ type, controller }) {\n  // console.log(`%c ${type}: ${controller.name} `, 'color: #FF6766; font-weight: bolder; font-size: 12px;'\n  //   , '\\n controller:', controller\n  // );\n  // NOTE store mark in to redux to provide correct watching of changes\n  yield put(updateCSDMetaAction(controller.name, { connected: false }));\n  yield cancel(controller.channel);\n  controller.channel = null;\n}\n\nexport function * sagas () {\n  yield takeEvery(TYPE.SUBSCRIBE, subscribeSaga);\n  yield takeEvery(TYPE.UNSUBSCRIBE, unsubscribeSaga);\n}\n","\n// outsource dependencies\nimport _ from 'lodash';\n\n// local dependencies\nimport { selectCSD, updateCSD, clearCSD } from './reducer';\n\nexport default options => {\n  const ctrlName = _.uniqueId(typeof options.prefix === 'string' ? options.prefix : 'controller');\n  if (!isGeneratorFn(options.subscriber)) {\n    throw new Error(`Controller(${ctrlName}) \"subscriber\" is required and should be generator \"sagas\"`);\n  }\n\n  const createTypes = _.isArray(options.types) ? options.types : [];\n  createTypes.map(type => type.toUpperCase());\n\n  const subscriber = options.subscriber;\n  const initial = _.isObject(options.initial) ? options.initial : {};\n  // predefined actions for reducer data\n  const action = {\n    clearCtrl: clearCSD(ctrlName),\n    updateCtrl: updateCSD(ctrlName),\n  };\n    //\n  const TYPE = {};\n  createTypes.map(type => {\n    // create unique action type\n    TYPE[type] = `@${ctrlName}/${type}`;\n    // create action creator for this type\n    return action[_.camelCase(type)] = payload => ({ type: TYPE[type], payload });\n  });\n\n  return {\n    TYPE,\n    initial,\n    action,\n    subscriber,\n    name: ctrlName,\n    selector: selectCSD(ctrlName),\n  };\n};\n\n/*\n *\n * @param {Any} options\n * @returns {Boolean}\n */\nfunction isGeneratorFn (fn) {\n  // FIXME on production build the generator will compile to \"switch function\"\n  return typeof fn === 'function';\n  // FIXME it's mean the validation is \"isGeneratorFn\" should be simplified too\n  // return typeof fn === 'function' && fn.constructor && fn.constructor.name === 'GeneratorFunction';\n}\n","\n// outsource dependencies\nimport { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\n\n// local dependencies\n\n/* HOOK */\nexport default controller => {\n  const dispatch = useDispatch();\n  const actionCreators = controller.action;\n  return useMemo(() => {\n    const cache = {};\n    Object.keys(actionCreators).map(actionName => {\n      const action = actionCreators[actionName];\n      return cache[actionName] = payload => dispatch(action(payload));\n    });\n    return cache;\n  }, [actionCreators, dispatch]);\n};\n","\n// outsource dependencies\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\n// local dependencies\nimport { selectCSD } from './reducer';\n\n/* HOOK */\nexport default controller => {\n  const name = controller.name;\n  const initial = controller.initial;\n  const actual = useSelector(selectCSD(name));\n  return useMemo(() => ({ ...initial, ...actual }), [initial, actual]);\n};\n","\n// outsource dependencies\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// local dependencies\nimport { unsubscribeAction, subscribeAction } from './saga';\nimport { removeCSDAction, createCSDAction, selectMetaCSD } from './reducer';\n\n/* private HOOK */\nconst useReducerSubscribe = controller => {\n  const name = controller.name;\n  const initial = controller.initial;\n  const dispatch = useDispatch();\n  const remove = useCallback(() => dispatch(removeCSDAction(name)), [name, dispatch]);\n  const create = useCallback(() => dispatch(createCSDAction(name, initial)), [initial, name, dispatch]);\n  useEffect(() => create() && remove, [create, remove]);\n  return null;\n};\n\n/* HOOK */\nexport default controller => {\n  useReducerSubscribe(controller);\n  const dispatch = useDispatch();\n  const meta = useSelector(selectMetaCSD(controller.name));\n  const subscribe = useCallback(() => dispatch(subscribeAction(controller)), [controller, dispatch]);\n  const unsubscribe = useCallback(() => dispatch(unsubscribeAction(controller)), [controller, dispatch]);\n  useEffect(() => subscribe() && unsubscribe, [subscribe, unsubscribe]);\n  return meta.connected;\n};\n","\n// outsource dependencies\n\n// local dependencies\nimport { sagas } from './saga';\nimport { reducer } from './reducer';\nimport prepareController from './prepare';\n\nimport useActions from './use-actions';\nimport useReducer from './use-reducer';\nimport useSubscribe from './use-subscribe';\n\n/**\n * Controller require connection to react-redux and redux-saga\n * please make sure you connected to react-redux\n * @example\n * import { reducer as controller } from './services/controller.service';\n *\n * and setup saga subscriber\n * import { sagas as controllerSagas } from './services/controller.service';\n *\n */\nexport {\n  // connect\n  sagas,\n  reducer,\n  // check correctness of minimum required data and make some prepare\n  prepareController,\n};\n\n/**\n * HOOK \"useController\"\n * contain all hooks which required to make controller alive\n * IMPORTANT in one time in the DOM  \"useController\" can subscribed not more than one time for one controller\n * if you need get some useful thing of controller outside of component subscriber use hook helpers\n */\nexport const useController = controller => [\n  useReducer(controller),\n  useActions(controller),\n  useSubscribe(controller)\n];\n\n/**\n * HOOK helper \"useControllerActions\"\n * provide ability to use controller actions outside of component subscriber\n */\nexport const useControllerActions = useActions;\n\n/**\n * HOOK \"useControllerData\"\n * provide ability to use controller data outside of component subscriber\n */\nexport const useControllerData = useReducer;\n\n/**\n * HOOK \"useControllerSubscribe\"\n * provide ability to connect controller without passing data or actions\n */\nexport const useControllerSubscribe = useSubscribe;\n","\n// outsource dependencies\nimport createSagaMiddleware from 'redux-saga';\nimport { reducer as toastr } from 'react-redux-toastr';\nimport { createHashHistory as createHistory } from 'history';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { push, connectRouter, routerMiddleware as createRouterMiddleware, goBack } from 'connected-react-router';\n\n// local dependencies\nimport config from './constants';\nimport { reducer as controller, sagas } from './services/controller';\n\n// export history outside of components to be able dispatch navigation actions from anywhere!\nexport const history = createHistory();\n\n// Build the middleware for intercepting and dispatching navigation actions\nconst routerMiddleware = createRouterMiddleware(history);\n\n// Build the middleware to run our Saga\nconst sagaMiddleware = createSagaMiddleware();\n\n// Apply redux extension compose for non production environment\nconst enchantedCompose = config.production ? compose : (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose);\n\n// Create store outside of root to be able dispatch actions from anywhere!\nexport const store = createStore(\n  combineReducers({\n    controller,\n    toastr,\n    router: connectRouter(history)\n  }),\n  enchantedCompose(applyMiddleware(routerMiddleware, sagaMiddleware))\n);\n\n// initialize application sagas\nsagaMiddleware.run(sagas);\n\n// Export\nexport default store;\n\n/**\n * provide functionality to change history outside of component\n *\n * @param {String} path\n */\nexport const historyPush = path => store.dispatch(push(path));\n\n/**\n * provide functionality back or go by defaults\n *\n * @param {String} path\n */\nexport const goBackWithDefaults = path => store.dispatch((history.length > 1 ? goBack : push)(path));\n","\n// outsource dependencies\nimport { takeEvery, put } from 'redux-saga/effects';\n\n// local dependencies\nimport { prepareController } from './services/controller';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'app',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type, payload }) {\n  yield put(controller.action.clearCtrl());\n  // console.log(`%c ${type} `, 'color: #FF6766; font-weight: bolder; font-size: 12px;'\n  //     , '\\n payload:', payload\n  // );\n  // NOTE initialization done\n  yield put(controller.action.updateCtrl({ initialized: true }));\n}\n","\n// outsource dependencies\nimport _ from 'lodash';\n\n// local dependencies\n\nexport default class Param {\n    static create = options => new Param(options);\n\n    constructor (options) {\n      this.applyValidOptions(options);\n    }\n\n    applyValidOptions = options => {\n      this.name = _.isString(options.name) ? options.name : 'unknown_field_name';\n      this.short = _.isString(options.short) ? options.short : this.name;\n      this.defaults = !_.isUndefined(options.defaults) ? options.defaults : void(0);\n      this.isValid = _.isFunction(options.isValid) ? options.isValid : this.isValid;\n      this.archive = _.isFunction(options.archive) ? options.archive : this.archive;\n      this.extract = _.isFunction(options.extract) ? options.extract : this.extract;\n    };\n\n    archive = v => v;\n\n    extract = v => v;\n\n    isValid = v => Boolean(v);\n\n    to = (data, store) => {\n      const value = this.archive(data[this.name]);\n      const def = this.archive(this.defaults);\n      if (this.isValid(value) && !_.isEqual(value, def)) {\n        store[this.short] = value;\n      }\n    };\n\n    from = (data, store) => {\n      const def = this.extract(this.defaults);\n      const value = this.extract(data[this.short]);\n      store[this.name] = this.isValid(value) ? value : def;\n    };\n}\n","\n// outsource dependencies\nimport qs from 'qs';\nimport _ from 'lodash';\nimport { replace, push } from 'connected-react-router';\n\n// local dependencies\nimport Param from './param';\nimport { store, history } from '../../store';\n\nexport default class Route {\n    static regParam = /:([^/]*)/gi;\n\n    static secret = Symbol('ROUTE');\n\n    static getSearch = () => String(_.get(history, 'location.search') || '');\n\n    static getPathname = () => String(_.get(history, 'location.pathname') || '');\n\n    static create = (url, options = {}) => {\n      if (!_.isString(url)) {\n        throw new Error('Route error: first parameter \"url\" is required and should be a string');\n      }\n      return new Route(url, options);\n    };\n\n    constructor (url, options) {\n      this[Route.secret] = {};\n      // NOTE prepare public props\n      this.ROUTE = Route.defineROUTE(url);\n      this.REGEXP = Route.defineREGEXP(this.ROUTE, options.REGEXP);\n      this.isActive = Route.defineIsActive(this.REGEXP, options.isActive);\n      // NOTE prepare private props\n      const queryAnnotation = Route.defineQueryAnnotation(url, options.query);\n      const paramsAnnotation = Route.defineParamsAnnotation(this.ROUTE, options.params);\n      this[Route.secret].query = queryAnnotation;\n      this[Route.secret].params = paramsAnnotation;\n      this[Route.secret].parseQuery = Route.defineParseQuery(queryAnnotation, options.parseQuery);\n      this[Route.secret].formatQuery = Route.defineFormatQuery(queryAnnotation, options.formatQuery);\n      this[Route.secret].parsePath = Route.defineParsePath(this.ROUTE, paramsAnnotation, options.parsePath);\n      this[Route.secret].formatPath = Route.defineFormatPath(this.ROUTE, paramsAnnotation, options.formatPath);\n    }\n\n    static defineROUTE = url => String(url).replace(/\\?.*/, '');\n\n    static defineREGEXP = (url, custom) => (_.isRegExp(custom) ? custom\n      : new RegExp(String(url).replace(Route.regParam, '.*'), 'i'));\n\n    static defineIsActive = (regexp, custom) => (_.isFunction(custom) ? custom\n      : () => regexp.test(Route.getPathname()));\n\n    static defineFormatPath = (url, annotation, custom) => (_.isFunction(custom) ? custom : options => {\n      const params = {};\n      annotation.map(rp => rp.from(options, params));\n      return String(url).replace(Route.regParam, (match, propName) => encodeURIComponent(params[propName]));\n    });\n\n    static defineParsePath = (url, annotation, custom) => (_.isFunction(custom) ? custom : path => {\n      const result = {};\n      const matcher = new RegExp(String(url).replace(Route.regParam, (a, propName) => `(?<${propName}>[^/]+)`), 'i');\n      const params = _.get(String(path).match(matcher), 'groups', {});\n      annotation.map(param => param.from(params, result));\n      return result;\n    });\n\n    static defineFormatQuery = (annotation, custom) => (_.isFunction(custom) ? custom : params => {\n      const result = {};\n      annotation.map(qp => qp.to(params, result));\n      return qs.stringify(result, { addQueryPrefix: true });\n    });\n\n    static defineParseQuery = (annotation, custom) => (_.isFunction(custom) ? custom : queryString => {\n      const result = {};\n      const params = qs.parse(queryString, { ignoreQueryPrefix: true });\n      annotation.map(param => param.from(params, result));\n      return result;\n    });\n\n    static defineQueryAnnotation = (url, options) => {\n      const annotation = [];\n      // NOTE try to take light annotation from url\n      if (/\\?/.test(url)) {\n        const params = url.split('?')[1].split('&');\n        params.map(string => {\n          const part = string.split('=');\n          const name = part[0];\n          const defaults = part[1];\n          return annotation.push(Param.create({ name, defaults }));\n        });\n      }\n      if (_.isArray(options)) {\n        options.map(qp => {\n          // NOTE try to merge annotation from url and from \"query\" array\n          const exist = _.find(annotation, { name: qp.name });\n          if (exist) { return exist.applyValidOptions(qp); }\n          return annotation.push(Param.create(qp));\n        });\n      }\n      return annotation;\n    };\n\n    static defineParamsAnnotation = (url, options) => {\n      const annotation = [];\n      // NOTE try to take light annotation from url\n      if (Route.regParam.test(url)) {\n        String(url).replace(Route.regParam, (match, name) => annotation.push(Param.create({ name })));\n      }\n      if (_.isArray(options)) {\n        options.map(rp => {\n          // NOTE try to merge annotation from url and from \"params\" array\n          const exist = _.find(annotation, { name: rp.name });\n          if (exist) { return exist.applyValidOptions(rp); }\n          // NOTE prevent \"short\" name for url params\n          return annotation.push(Param.create({ ...rp, short: rp.name }));\n        });\n      }\n      return annotation;\n    };\n\n    LINK = (params, query) => {\n      params = Object.assign({}, params);\n      query = Object.assign({}, query);\n      const formatPath = this[Route.secret].formatPath;\n      const formatQuery = this[Route.secret].formatQuery;\n      // console.log('%c LINK ', 'color: #156F93; font-weight: bolder; font-size: 12px;'\n      //     , '\\n ROUTE:', this\n      //     , '\\n params:', params\n      //     , '\\n query:', query\n      //     , '\\n formatPath(params):', formatPath(params)\n      //     , '\\n formatQuery(query):', formatQuery(query)\n      // );\n      return `${formatPath(params)}${formatQuery(query)}`;\n    };\n\n    PARAMS = pathname => this[Route.secret].parsePath(_.isString(pathname) ? pathname : Route.getPathname());\n\n    QUERY = search => this[Route.secret].parseQuery(_.isString(search) ? search : Route.getSearch());\n\n    ACTION_PUSH = (...args) => push(this.LINK(...args));\n\n    ACTION_REPLACE = (...args) => replace(this.LINK(...args));\n\n    PUSH = (...args) => store.dispatch(this.ACTION_PUSH(...args));\n\n    REPLACE = (...args) => store.dispatch(this.ACTION_REPLACE(...args));\n}\n","\n// outsource dependencies\n\n// local dependencies\nimport Route from './route';\nimport { NEW_ID } from '../../constants/spec';\n\nexport const defineRoute = (...args) => Route.create(...args);\nexport default defineRoute;\n\n/**\n * Some commonly used annotations\n */\nexport const ANNOTATION = {\n  // NOTE popular params\n  ID: opt => ({ name: 'id', defaults: NEW_ID, ...opt }),\n  TOKEN: opt => ({ name: 'token', defaults: 'invalid-token', ...opt }),\n  // NOTE popular query\n  NAME: opt => ({ short: 'n', name: 'name', defaults: '', ...opt }),\n  PAGE: opt => ({ short: 'p', name: 'page', archive: Number, extract: Number, defaults: 0, ...opt }),\n  SIZE: opt => ({ short: 's', name: 'size', archive: Number, extract: Number, defaults: 10, ...opt }),\n  SORT_D: opt => ({ short: 'sd', name: 'sortD', archive: Number, extract: Boolean, defaults: false, ...opt }),\n  SORT_F: opt => ({ short: 'sf', name: 'sortF', defaults: 'name', isValid: v => ['name'].indexOf(v) > -1, ...opt }),\n};\n\n","\n// outsource dependencies\n\n// local dependencies\nimport { defineRoute } from '../services/route';\n\nexport const LAYOUT = '/private';\n\nexport const NEWS = defineRoute(`${LAYOUT}/news`);\nexport const NEWS_LIST = defineRoute(`${NEWS.ROUTE}/list`);\nexport const NEWS_DATA_LOCAL = defineRoute(`${NEWS.ROUTE}/data-local`);\nexport const NEWS_DATA_API = defineRoute(`${NEWS.ROUTE}/data-api`);\nexport const NEWS_IMAGES_ORIGINAL = defineRoute(`${NEWS.ROUTE}/images-original`);\nexport const NEWS_IMAGES_COMPRESSED = defineRoute(`${NEWS.ROUTE}/images-compressed`);\nexport const NEWS_IMAGES_RESIZED = defineRoute(`${NEWS.ROUTE}/images-resized`);\n","\n// outsource dependencies\nimport qs from 'qs';\nimport axios from 'axios';\n\nexport const instanceJSON = axios.create({\n  paramsSerializer,\n  baseURL: 'https://api.jsonbin.io',\n  withCredentials: false,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\ninstanceJSON.interceptors.response.use(prepareResponse);\n\n// axios instance prepared for app\nconst instanceNEWS = axios.create({\n  paramsSerializer,\n  baseURL: 'https://newsapi.org/v2',\n  withCredentials: false,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n//setup interceptors\ninstanceNEWS.interceptors.response.use(prepareResponse);\n\n// prepare results. Solution to prepare data ... or not\nfunction prepareResponse (response) {\n  // NOTE solution to prepare data\n  return response.data;\n}\n\n// override query serializer to define array Format as API needed\nfunction paramsSerializer (options) {\n  return qs.stringify(options, { arrayFormat: 'repeat', encode: false });\n}\n\nexport default instanceNEWS;\n","\n// outsource dependencies\nimport { takeEvery, put, call } from 'redux-saga/effects';\n\n// local dependencies\nimport { instanceJSON } from 'services/api.service';\nimport { prepareController } from 'services/controller';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n\n  list: [],\n  aside: [],\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'data-api',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type }) {\n  yield put(controller.action.updateCtrl({ disabled: false }));\n  try {\n    // const main = yield call(instanceNEWS, {\n    //   url: '/everything',\n    //   params: {\n    //     q: 'Ukraine',\n    //     sortBy: 'publishedAt',\n    //     apiKey: 'f01c948178be420fb162319fa7f9ff37'\n    //   }\n    // });\n    const main = yield call(instanceJSON, {\n      url: '/b/6129c23e076a223676b29deb',\n    });\n    // const aside = yield call(instanceNEWS, {\n    //   url: '/everything',\n    //   params: {\n    //     q: 'sport',\n    //     pageSize: 10,\n    //     sortBy: 'publishedAt',\n    //     apiKey: 'f01c948178be420fb162319fa7f9ff37'\n    //   }\n    // });\n    const aside = yield call(instanceJSON, {\n      url: '/b/6129c27fc5159b35ae055ed5',\n    });\n    yield put(controller.action.updateCtrl({\n      list: main?.articles,\n      aside: aside?.articles,\n    }));\n  } catch (error) {\n    console.error(error);\n  }\n  yield put(controller.action.updateCtrl({ initialized: true, disabled: false }));\n}\n","export default __webpack_public_path__ + \"static/media/placeholder.04228579.png\";","\n// outsource dependencies\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\nimport { Card, CardBody, CardFooter, CardSubtitle, CardText, CardTitle } from 'reactstrap';\n\n// local dependencies\nimport placeholderIMG from '../images/placeholder.png';\n\nfunction CardNews ({ title, urlToImage, description, publishedAt, author }) {\n  return <Card className=\"h-100\">\n    <img src={urlToImage} alt={title} className=\"img-fluid w-100\" width=\"220\" height=\"125\" />\n    <CardBody>\n      <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n      <CardSubtitle tag=\"h6\" className=\"mb-2 mt-0\">\n        { author }\n      </CardSubtitle>\n      <CardText>{ description }</CardText>\n    </CardBody>\n    <CardFooter className=\"text-center\">\n      { moment(publishedAt).format('LLL') }\n    </CardFooter>\n  </Card>;\n}\n\nCardNews.propTypes = {\n  title: PropTypes.string,\n  author: PropTypes.string,\n  urlToImage: PropTypes.string,\n  description: PropTypes.string,\n  publishedAt: PropTypes.string,\n};\n\nCardNews.defaultProps = {\n  title: '-',\n  description: '-',\n  publishedAt: new Date(),\n  author: 'Unknown author',\n  urlToImage: placeholderIMG,\n};\n\nexport default memo(CardNews);\n","\n// outsource dependencies\nimport { Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nconst AlertError = memo(({ message, title, active, onClear, ...attr }) => {\n  return <Alert color=\"danger\" {...attr} isOpen={Boolean(message)} toggle={!active ? null : onClear}>\n    <strong> { title } </strong>\n    { message }\n  </Alert>;\n});\nAlertError.propTypes = {\n  active: PropTypes.bool,\n  title: PropTypes.string,\n  onClear: PropTypes.func,\n  message: PropTypes.string,\n  className: PropTypes.string,\n};\nAlertError.defaultProps = {\n  message: null,\n  active: false,\n  onClear: null,\n  title: 'Error: ',\n  className: 'animated fadeIn',\n};\nexport default AlertError;\n","\n// outsource dependencies\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * contain logic to hide elements which wrapped by preloader\n */\nexport const withLoader = fn => ({ active = false, children = null, ...attr }) => !active ? children : fn(attr);\n// NOTE common propTypes for wrapped components\nwithLoader.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.element, PropTypes.node])\n};\n\n/**\n * Prepared default preloader same as on \"public/index.html\"\n */\nexport const Preloader = withLoader(props => <div className=\"def-preloader\" {...props}>\n  <div id=\"SPW\">\n    <div id=\"SP_1\" className=\"sp\"> </div>\n    <div id=\"SP_2\" className=\"sp\"> </div>\n    <div id=\"SP_3\" className=\"sp\"> </div>\n    <div id=\"SP_4\" className=\"sp\"> </div>\n    <div id=\"SP_5\" className=\"sp\"> </div>\n    <div id=\"SP_6\" className=\"sp\"> </div>\n    <div id=\"SP_7\" className=\"sp\"> </div>\n    <div id=\"SP_8\" className=\"sp\"> </div>\n  </div>\n</div>);\nPreloader.propTypes = {\n  ...withLoader.propTypes,\n};\n\nexport const BoxLoader = props => <Preloader className=\"box-preloader\" style={{ height: '100%' }} {...props} />;\n\n/**\n * Prepared Spinner\n */\nexport const Spinner = withLoader(props => {\n  // NOTE detect IE8 and above, and edge\n  const isShit = window.document.documentMode || /Edge/.test(window.navigator.userAgent);\n  return <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    preserveAspectRatio=\"xMidYMid\"\n    viewBox=\"20 20 60 60\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    height=\"1em\"\n    role=\"img\"\n    // NOTE use fontawesome class to emulate animation\n    className={isShit ? 'fa-spin' : ''}\n    {...props}\n  >\n    { seeds.map((item, i) => <Seed key={i} {...item} />) }\n  </svg>;\n});\nSpinner.propTypes = {\n  ...withLoader.propTypes,\n};\nconst seeds = [\n  { transform: 'rotate(0 50 50)', begin: '-0.9166666666666666s' },\n  { transform: 'rotate(30 50 50)', begin: '-0.8333333333333334s' },\n  { transform: 'rotate(60 50 50)', begin: '-0.75s' },\n  { transform: 'rotate(90 50 50)', begin: '-0.6666666666666666s' },\n  { transform: 'rotate(120 50 50)', begin: '-0.5833333333333334s' },\n  { transform: 'rotate(150 50 50)', begin: '-0.5s' },\n  { transform: 'rotate(180 50 50)', begin: '-0.4166666666666667s' },\n  { transform: 'rotate(210 50 50)', begin: '-0.3333333333333333s' },\n  { transform: 'rotate(240 50 50)', begin: '-0.25s' },\n  { transform: 'rotate(270 50 50)', begin: '-0.16666666666666666s' },\n  { transform: 'rotate(300 50 50)', begin: '-0.08333333333333333s' },\n  { transform: 'rotate(330 50 50)', begin: '0s' },\n];\nconst Seed = ({ transform, begin }) => <g transform={transform}>\n  <rect x=\"47\" y=\"24\" rx=\"9.4\" ry=\"4.8\" width=\"6\" height=\"12\" fill=\"currentColor\">\n    <animate attributeName=\"opacity\" values=\"1;0\" keyTimes=\"0;1\" dur=\"1s\" begin={begin} repeatCount=\"indefinite\" />\n  </rect>\n</g>;\nSeed.propTypes = {\n  begin: PropTypes.string.isRequired,\n  transform: PropTypes.string.isRequired,\n};\n\nexport default Preloader;\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { CardText, CardTitle, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap';\n\n// local dependencies\nimport controller from './controller';\nimport CardNews from 'components/card-news';\nimport AlertError from 'components/alert-error';\nimport { useController } from 'services/controller';\nimport { BoxLoader, Spinner } from 'components/preloader';\n\n// configure\n\nexport default memo(() => {\n  const [\n    { initialized, disabled, errorMessage, list, aside },\n    { initialize, clearCtrl, updateCtrl },\n    isControllerConnected,\n  ] = useController(controller);\n\n  useEffect(() => initialize() && clearCtrl, [clearCtrl, initialize]);\n\n  const clearError = useCallback(() => updateCtrl({ errorMessage: null }), [updateCtrl]);\n\n  return <BoxLoader active={disabled || !initialized || !isControllerConnected}>\n    <AlertError active error={errorMessage} onClear={clearError} />\n    <Container>\n      <Row className=\"mb-3 py-3\">\n        <Col xs=\"8\" tag=\"h1\" className=\"mb-0 text-capitalize\">\n          Data from API\n          { disabled ? <Spinner active /> : null }\n        </Col>\n        <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n          { moment().format('LLL') }\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"8\" md=\"6\" xs=\"12\" tag=\"main\">\n          <Row>\n            { list?.map((item, index) => <Col key={index} xs=\"12\" md=\"6\" lg=\"4\" className=\"mb-3\">\n              <CardNews {...item} />\n            </Col>) }\n          </Row>\n        </Col>\n        <Col tag=\"aside\">\n          <ListGroup>\n            { aside?.map(({ title, description }, index) => <ListGroupItem key={index}>\n              <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n              <CardText>{ description }</CardText>\n            </ListGroupItem>) }\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  </BoxLoader>;\n});\n","\n// outsource dependencies\nimport { takeEvery, put } from 'redux-saga/effects';\n\n// local dependencies\nimport { prepareController } from 'services/controller';\n\nimport aside from './aside.json';\nimport main from './main.json';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n\n  list: [],\n  aside: [],\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'data-api',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type }) {\n  yield put(controller.action.updateCtrl({ disabled: false }));\n  yield put(controller.action.updateCtrl({\n    list: main?.articles,\n    aside: aside?.articles,\n  }));\n  yield put(controller.action.updateCtrl({ initialized: true, disabled: false }));\n}\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { CardText, CardTitle, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap';\n\n// local dependencies\nimport controller from './controller';\nimport CardNews from 'components/card-news';\nimport AlertError from 'components/alert-error';\nimport { useController } from 'services/controller';\nimport { BoxLoader, Spinner } from 'components/preloader';\n\n// configure\n\nexport default memo(() => {\n  const [\n    { initialized, disabled, errorMessage, list, aside },\n    { initialize, clearCtrl, updateCtrl },\n    isControllerConnected,\n  ] = useController(controller);\n\n  useEffect(() => initialize() && clearCtrl, [clearCtrl, initialize]);\n\n  const clearError = useCallback(() => updateCtrl({ errorMessage: null }), [updateCtrl]);\n\n  return <BoxLoader active={disabled || !initialized || !isControllerConnected}>\n    <AlertError active error={errorMessage} onClear={clearError} />\n    <Container>\n      <Row className=\"mb-3 py-3\">\n        <Col xs=\"8\" tag=\"h1\" className=\"mb-0 text-capitalize\">\n          Local Data\n          { disabled ? <Spinner active /> : null }\n        </Col>\n        <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n          { moment().format('LLL') }\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"8\" md=\"6\" xs=\"12\" tag=\"main\">\n          <Row>\n            { list?.map((item, index) => <Col key={index} xs=\"12\" md=\"6\" lg=\"4\" className=\"mb-3\">\n              <CardNews {...item} />\n            </Col>) }\n          </Row>\n        </Col>\n        <Col tag=\"aside\">\n          <ListGroup>\n            { aside?.map(({ title, description }, index) => <ListGroupItem key={index}>\n              <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n              <CardText>{ description }</CardText>\n            </ListGroupItem>) }\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  </BoxLoader>;\n});\n","\n// outsource dependencies\nimport { takeEvery, put } from 'redux-saga/effects';\n\n// local dependencies\nimport { prepareController } from 'services/controller';\n\nimport aside from './aside.json';\nimport main from './main.json';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n\n  list: [],\n  aside: [],\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'data-original',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type }) {\n  yield put(controller.action.updateCtrl({ disabled: false }));\n  yield put(controller.action.updateCtrl({\n    list: main?.articles,\n    aside: aside?.articles,\n  }));\n  yield put(controller.action.updateCtrl({ initialized: true, disabled: false }));\n}\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { CardText, CardTitle, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap';\n\n// local dependencies\nimport controller from './controller';\nimport CardNews from 'components/card-news';\nimport AlertError from 'components/alert-error';\nimport { useController } from 'services/controller';\nimport { BoxLoader, Spinner } from 'components/preloader';\n\n// configure\n\nexport default memo(() => {\n  const [\n    { initialized, disabled, errorMessage, list, aside },\n    { initialize, clearCtrl, updateCtrl },\n    isControllerConnected,\n  ] = useController(controller);\n\n  useEffect(() => initialize() && clearCtrl, [clearCtrl, initialize]);\n\n  const clearError = useCallback(() => updateCtrl({ errorMessage: null }), [updateCtrl]);\n\n  return <BoxLoader active={disabled || !initialized || !isControllerConnected}>\n    <AlertError active error={errorMessage} onClear={clearError} />\n    <Container>\n      <Row className=\"mb-3 py-3\">\n        <Col xs=\"8\" tag=\"h1\" className=\"mb-0 text-capitalize\">\n          Images Original\n          { disabled ? <Spinner active /> : null }\n        </Col>\n        <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n          { moment().format('LLL') }\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"8\" md=\"6\" xs=\"12\" tag=\"main\">\n          <Row>\n            { list?.map((item, index) => <Col key={index} xs=\"12\" md=\"6\" lg=\"4\" className=\"mb-3\">\n              <CardNews {...item} />\n            </Col>) }\n          </Row>\n        </Col>\n        <Col tag=\"aside\">\n          <ListGroup>\n            { aside?.map(({ title, description }, index) => <ListGroupItem key={index}>\n              <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n              <CardText>{ description }</CardText>\n            </ListGroupItem>) }\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  </BoxLoader>;\n});\n","\n// outsource dependencies\nimport { takeEvery, put } from 'redux-saga/effects';\n\n// local dependencies\nimport { prepareController } from 'services/controller';\n\nimport aside from './aside.json';\nimport main from './main.json';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n\n  list: [],\n  aside: [],\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'data-compressed',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type }) {\n  yield put(controller.action.updateCtrl({ disabled: false }));\n  yield put(controller.action.updateCtrl({\n    list: main?.articles,\n    aside: aside?.articles,\n  }));\n  yield put(controller.action.updateCtrl({ initialized: true, disabled: false }));\n}\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { CardText, CardTitle, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap';\n\n// local dependencies\nimport controller from './controller';\nimport CardNews from 'components/card-news';\nimport AlertError from 'components/alert-error';\nimport { useController } from 'services/controller';\nimport { BoxLoader, Spinner } from 'components/preloader';\n\n// configure\n\nexport default memo(() => {\n  const [\n    { initialized, disabled, errorMessage, list, aside },\n    { initialize, clearCtrl, updateCtrl },\n    isControllerConnected,\n  ] = useController(controller);\n\n  useEffect(() => initialize() && clearCtrl, [clearCtrl, initialize]);\n\n  const clearError = useCallback(() => updateCtrl({ errorMessage: null }), [updateCtrl]);\n\n  return <BoxLoader active={disabled || !initialized || !isControllerConnected}>\n    <AlertError active error={errorMessage} onClear={clearError} />\n    <Container>\n      <Row className=\"mb-3 py-3\">\n        <Col xs=\"8\" tag=\"h1\" className=\"mb-0 text-capitalize\">\n          Images Compressed\n          { disabled ? <Spinner active /> : null }\n        </Col>\n        <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n          { moment().format('LLL') }\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"8\" md=\"6\" xs=\"12\" tag=\"main\">\n          <Row>\n            { list?.map((item, index) => <Col key={index} xs=\"12\" md=\"6\" lg=\"4\" className=\"mb-3\">\n              <CardNews {...item} />\n            </Col>) }\n          </Row>\n        </Col>\n        <Col tag=\"aside\">\n          <ListGroup>\n            { aside?.map(({ title, description }, index) => <ListGroupItem key={index}>\n              <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n              <CardText>{ description }</CardText>\n            </ListGroupItem>) }\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  </BoxLoader>;\n});\n","\n// outsource dependencies\nimport { takeEvery, put } from 'redux-saga/effects';\n\n// local dependencies\nimport { prepareController } from 'services/controller';\n\nimport aside from './aside.json';\nimport main from './main.json';\n\n// configure\nconst initial = {\n  initialized: false,\n  disabled: null,\n  errorMessage: '',\n\n  list: [],\n  aside: [],\n};\n\nexport const controller = prepareController({\n  initial,\n  prefix: 'data-resized',\n  types: ['INITIALIZE'],\n  subscriber: function * () {\n    yield takeEvery(controller.TYPE.INITIALIZE, initializeSaga);\n  }\n});\nexport default controller;\n\nfunction * initializeSaga ({ type }) {\n  yield put(controller.action.updateCtrl({ disabled: false }));\n  yield put(controller.action.updateCtrl({\n    list: main?.articles,\n    aside: aside?.articles,\n  }));\n  yield put(controller.action.updateCtrl({ initialized: true, disabled: false }));\n}\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { CardText, CardTitle, Col, Container, ListGroup, ListGroupItem, Row } from 'reactstrap';\n\n// local dependencies\nimport controller from './controller';\nimport CardNews from 'components/card-news';\nimport AlertError from 'components/alert-error';\nimport { useController } from 'services/controller';\nimport { BoxLoader, Spinner } from 'components/preloader';\n\n// configure\n\nexport default memo(() => {\n  const [\n    { initialized, disabled, errorMessage, list, aside },\n    { initialize, clearCtrl, updateCtrl },\n    isControllerConnected,\n  ] = useController(controller);\n\n  useEffect(() => initialize() && clearCtrl, [clearCtrl, initialize]);\n\n  const clearError = useCallback(() => updateCtrl({ errorMessage: null }), [updateCtrl]);\n\n  return <BoxLoader active={disabled || !initialized || !isControllerConnected}>\n    <AlertError active error={errorMessage} onClear={clearError} />\n    <Container>\n      <Row className=\"mb-3 py-3\">\n        <Col xs=\"8\" tag=\"h1\" className=\"mb-0 text-capitalize\">\n          Images Cropped\n          { disabled ? <Spinner active /> : null }\n        </Col>\n        <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n          { moment().format('LLL') }\n        </Col>\n      </Row>\n      <Row>\n        <Col lg=\"8\" md=\"6\" xs=\"12\" tag=\"main\">\n          <Row>\n            { list?.map((item, index) => <Col key={index} xs=\"12\" md=\"6\" lg=\"4\" className=\"mb-3\">\n              <CardNews {...item} />\n            </Col>) }\n          </Row>\n        </Col>\n        <Col tag=\"aside\">\n          <ListGroup>\n            { aside?.map(({ title, description }, index) => <ListGroupItem key={index}>\n              <CardTitle tag=\"h5\" className=\"mb-2 mt-0\">{ title }</CardTitle>\n              <CardText>{ description }</CardText>\n            </ListGroupItem>) }\n          </ListGroup>\n        </Col>\n      </Row>\n    </Container>\n  </BoxLoader>;\n});\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\n// local dependencies\n\n// configure\n\nexport default memo(() => <Container>\n  <Row className=\"mb-3 py-3\">\n    <Col xs=\"8\" tag=\"h1\" className=\"mb-0\">\n      Welcome to NEWS.com\n    </Col>\n    <Col xs=\"4\" tag=\"p\" className=\"mb-0 d-flex align-items-center justify-content-end\">\n      { moment().format('LLL') }\n    </Col>\n  </Row>\n  <Row>\n    <Col className=\"p-5\">\n      <h2 className=\"text-center\">Search worldwide news with code</h2>\n      <p className=\"text-center\">Locate articles and breaking news headlines from news sources and blogs across the web with our JSON API</p>\n    </Col>\n  </Row>\n</Container>);\n","\n// outsource dependencies\nimport moment from 'moment';\nimport React, { memo } from 'react';\nimport { ListGroup, ListGroupItem } from 'reactstrap';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\n\n// local dependencies\nimport * as ROUTES from '../constants/routes';\n\nimport DataApi from './data-api';\nimport DataLocal from './data-local';\nimport ImagesOriginal from './images-original';\nimport ImagesCompressed from './images-compressed';\nimport ImagesResized from './images-resized';\n\nimport List from './list';\n\nexport default memo(() => <>\n  <header className=\"bg-dark p-4 d-flex justify-content-between\">\n    <h1 className=\"text-white mb-0\">NEWS.com</h1>\n    <nav>\n      <ListGroup horizontal className=\"d-flex align-items-center h-100\">\n        <ListGroupItem\n          tag={Link}\n          className=\"bg-transparent border-0 text-white\"\n          to={ROUTES.NEWS_DATA_LOCAL.LINK()}\n        >\n          Local Data\n        </ListGroupItem>\n        <ListGroupItem\n          tag={Link}\n          className=\"bg-transparent border-0 text-white\"\n          to={ROUTES.NEWS_DATA_API.LINK()}\n        >\n          Data from API\n        </ListGroupItem>\n        <ListGroupItem\n          tag={Link}\n          className=\"bg-transparent border-0 text-white\"\n          to={ROUTES.NEWS_IMAGES_ORIGINAL.LINK()}\n        >\n          Images Original\n        </ListGroupItem>\n        <ListGroupItem\n          tag={Link}\n          className=\"bg-transparent border-0 text-white\"\n          to={ROUTES.NEWS_IMAGES_COMPRESSED.LINK()}\n        >\n          Images Compressed\n        </ListGroupItem>\n        <ListGroupItem\n          tag={Link}\n          className=\"bg-transparent border-0 text-white\"\n          to={ROUTES.NEWS_IMAGES_RESIZED.LINK()}\n        >\n          Images Cropped\n        </ListGroupItem>\n      </ListGroup>\n    </nav>\n  </header>\n  <div className=\"flex-grow-1\">\n    <Switch>\n      <Route path={ROUTES.NEWS_LIST.ROUTE} component={List} />\n      <Route path={ROUTES.NEWS_DATA_API.ROUTE} component={DataApi} />\n      <Route path={ROUTES.NEWS_DATA_LOCAL.ROUTE} component={DataLocal} />\n      <Route path={ROUTES.NEWS_IMAGES_RESIZED.ROUTE} component={ImagesResized} />\n      <Route path={ROUTES.NEWS_IMAGES_ORIGINAL.ROUTE} component={ImagesOriginal} />\n      <Route path={ROUTES.NEWS_IMAGES_COMPRESSED.ROUTE} component={ImagesCompressed} />\n      <Redirect to={ROUTES.NEWS_LIST.LINK()} />\n    </Switch>\n  </div>\n  <footer className=\"bg-dark p-4 d-flex justify-content-center text-white\">\n    &copy;\n    { moment().format('YYYY') }\n  </footer>\n</>);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\n// outsource dependencies\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport ReduxToastr from 'react-redux-toastr';\nimport React, { memo, useEffect } from 'react';\nimport { ConnectedRouter } from 'connected-react-router';\n\n// STYLES inject ...\nimport './style';\n\n// local dependencies\nimport { history, store } from './store';\n\nimport controller from './controller';\nimport { useController } from './services/controller';\n\nimport Layout from './layout';\nimport Preloader from './components/preloader';\n\nimport reportWebVitals from './reportWebVitals';\n\n\nconst App = memo(() => {\n  // NOTE subscribe app controller\n  const [{ initialized }, { initialize }, isControllerConnected] = useController(controller);\n  // NOTE initialize business logic\n  useEffect(() => { initialize(); }, [initialize]);\n  // NOTE select view based on application state\n  // if (!health) { return <Maintenance />; }\n  if (!initialized || !isControllerConnected) { return <Preloader active={true} />; }\n  return <>\n    <ConnectedRouter history={history} location={history.location}>\n      <Layout />\n    </ConnectedRouter>\n    <ReduxToastr\n      progressBar\n      timeOut={2000}\n      preventDuplicates\n      newestOnTop={false}\n      position=\"top-right\"\n      transitionIn=\"fadeIn\"\n      transitionOut=\"fadeOut\"\n    />\n  </>;\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}